// <auto-generated />
using System;
using Creeperscare.DAL.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Creeperscare.API.Migrations
{
    [DbContext(typeof(CreeperscareDbContext))]
    [Migration("20191113122028_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Creeperscare.Entities.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActionRange");

                    b.Property<double>("Humidity");

                    b.Property<int>("OwnerId");

                    b.Property<double>("Temperature");

                    b.HasKey("DeviceId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Creeperscare.Entities.GardenPlot", b =>
                {
                    b.Property<int>("GardenPlotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Length");

                    b.Property<double>("Width");

                    b.HasKey("GardenPlotId");

                    b.ToTable("GardenPlots");
                });

            modelBuilder.Entity("Creeperscare.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("DeviceId");

                    b.Property<int>("GardenPlotId");

                    b.Property<string>("ServiceType");

                    b.HasKey("ServiceId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("GardenPlotId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Creeperscare.Entities.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdentificationName");

                    b.Property<double>("Price");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Creeperscare.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<int?>("SubscriptionId");

                    b.HasKey("UserId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Creeperscare.Entities.Device", b =>
                {
                    b.HasOne("Creeperscare.Entities.User", "Owner")
                        .WithMany("Devices")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Creeperscare.Entities.Service", b =>
                {
                    b.HasOne("Creeperscare.Entities.Device", "Device")
                        .WithMany("GardenPlotServices")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Creeperscare.Entities.GardenPlot", "GetGardenPlot")
                        .WithMany("DeviceServices")
                        .HasForeignKey("GardenPlotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Creeperscare.Entities.User", b =>
                {
                    b.HasOne("Creeperscare.Entities.Subscription", "Subscription")
                        .WithMany("Subscribers")
                        .HasForeignKey("SubscriptionId");
                });
#pragma warning restore 612, 618
        }
    }
}
